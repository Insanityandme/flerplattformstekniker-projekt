/* Base */
/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2. Remove default margin */
* {
  margin: 0;
}

/* 3. Enable keyword animations */
@media (prefers-reduced-motion: no-preference) {
  html {
    interpolate-size: allow-keywords;
  }
}

body {
  /* 4. Add accessible line-height */
  line-height: 1.5;
  /* 5. Improve text rendering */
  -webkit-font-smoothing: antialiased;
}

/* 6. Improve media defaults */
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/* 7. Inherit fonts for form controls */
input,
button,
textarea,
select {
  font: inherit;
}

/* 8. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* 9. Improve line wrapping */
p {
  text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  text-wrap: balance;
}

/*
  10. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

:root {
  /* colors */
  --black: #001201;
  --tan: #b6b57b;
  --green: #31b28a;
  --lightgreen: #8cdfc5;
  --red: #ff4404;
  --white: #ffffff;

  /* font families */
  --main: 'Lato', sans-serif;
  --heading: 'Josefin Sans', sans-serif;
  --mono: 'Fira Mono', monospace;

  /* type scale */
  --base-size: 1.2rem;
  --scale: 1.25; /* 1.25 is also common */
  --h1: calc(var(--h2) * var(--scale));
  --h2: calc(var(--h3) * var(--scale));
  --h3: calc(var(--h4) * var(--scale));
  --h4: calc(var(--h5) * var(--scale));
  --h5: calc(var(--h6) * var(--scale));
  --h6: var(--base-size);
  --small: calc(var(--base-size) / var(--scale));
}

/* border box model: https://css-tricks.com/box-sizing/ */
html {
  box-sizing: border-box;
}
*,
*::before,
*::after {
  box-sizing: inherit;
}

/* h/t Scott O'Hara https://css-tricks.com/inclusively-hidden/ */
.sr-only:not(:focus):not(:active) {
  clip: rect(0, 0, 0, 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

body {
  font-family: var(--main);
  line-height: 1.5;
  font-size: var(--base-size);
  margin: 0;
  padding: 0;
  background-color: var(--green);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--heading);
}

h1 {
  font-size: var(--h1);
}
h2 {
  font-size: var(--h2);
}
h3 {
  font-size: var(--h3);
}
h4 {
  font-size: var(--h4);
}
h5 {
  font-size: var(--h5);
}
h6 {
  font-size: var(--h6);
}
.mono {
  font-family: var(--mono);
}

.colors {
  display: flex;
  gap: 20px;
}
.colors > * {
  width: 50px;
  height: 50px;
}
.black {
  background-color: var(--black);
}
.white {
  background-color: var(--white);
}
.tan {
  background-color: var(--tan);
}
.green {
  background-color: var(--green);
}
.lightgreen {
  background-color: var(--lightgreen);
}
.red {
  background-color: var(--red);
}
a {
  color: var(--green);
}
a:hover {
  text-decoration: none;
}
img {
  max-width: 100%;
}
figure {
  padding: 0;
  margin: 0;
}
.container {
  max-width: 950px;
  margin: 1rem auto;
  background-color: var(--white);
  color: var(--black);
  padding: 1rem;
  border-radius: 5px;
}
.button {
  display: inline-block; /* as wide as the content but can add padding/margin */
  background-color: var(--green);
  color: var(--black);
  padding: 1rem 0.8rem 0.8rem 0.8rem;
  border-radius: 5px;
  text-decoration: none;
  font-family: var(--heading);
  font-size: var(--small);
  text-transform: uppercase;
  font-weight: 600;
  line-height: 1;
}

.button:hover {
  background-color: var(--tan);
}
